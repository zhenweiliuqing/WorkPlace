1.  逆转链表 至少用3个node
     void reverseLinkedList(){
         if (head == NULL || head.next == NULL)
            return;
        Node p1 = head;
        Node p2 = head.next;
        Node p3 = NULL;

        while (p2 != NULL){
            p3 = p2.next;
            p2.next = p1;
            p1 = p2;
            p2 = p3;
        }//p1.next怎么释放
        head.next = NULL;
        head = p1;
     }

2.  quick sort
    void QuickSort(int st, int end) {
         if (st < end) {
             int r = partition(st, end);
             QuickSort(st, r - 1);
             QuickSort(r + 1, end);
         }
    }
    int partition(int st, int end) {
        int i = st;
        for (int j = st + 1; j <= end; j++) {
            if (data[j] < data[st]) {
                i++;
                swap(data[i], data[j]); //用引用交换
            } //小于pivot进行处理一下 最后是从小到大排列
        }
        swap(data[st], data[i]);
        return i;
    }

3. isprime
   bool isprime(int x) {
        if (x == 1)
          return false;
        for (int i = 2; i <= sqrt(x); i++) {
            if (x % i == 0)
                return false;
        }
        return true;
   }